<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.36.0 (20140111.2315)
 -->
<!-- Title: com.cloudera.impala.analysis.CastExpr Pages: 1 -->
<svg width="399pt" height="1092pt"
 viewBox="0.00 0.00 399.00 1092.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1088)">
<title>com.cloudera.impala.analysis.CastExpr</title>
<polygon fill="white" stroke="none" points="-4,4 -4,-1088 395,-1088 395,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node"><title>Node1</title>
<polygon fill="#bfbfbf" stroke="black" points="164.5,-1 164.5,-245 313.5,-245 313.5,-1 164.5,-1"/>
<text text-anchor="start" x="172.5" y="-233" font-family="Helvetica,sans-Serif" font-size="10.00">com.cloudera.impala.analysis.</text>
<text text-anchor="middle" x="239" y="-222" font-family="Helvetica,sans-Serif" font-size="10.00">CastExpr</text>
<polyline fill="none" stroke="black" points="164.5,-215 313.5,-215 "/>
<text text-anchor="start" x="172.5" y="-203" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; targetTypeDef_</text>
<text text-anchor="start" x="172.5" y="-192" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; isImplicit_</text>
<text text-anchor="start" x="172.5" y="-181" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; noOp_</text>
<polyline fill="none" stroke="black" points="164.5,-174 313.5,-174 "/>
<text text-anchor="start" x="172.5" y="-162" font-family="Helvetica,sans-Serif" font-size="10.00">+ CastExpr()</text>
<text text-anchor="start" x="172.5" y="-151" font-family="Helvetica,sans-Serif" font-size="10.00">+ CastExpr()</text>
<text text-anchor="start" x="172.5" y="-140" font-family="Helvetica,sans-Serif" font-size="10.00">+ toSqlImpl()</text>
<text text-anchor="start" x="172.5" y="-129" font-family="Helvetica,sans-Serif" font-size="10.00">+ debugString()</text>
<text text-anchor="start" x="172.5" y="-118" font-family="Helvetica,sans-Serif" font-size="10.00">+ isImplicit()</text>
<text text-anchor="start" x="172.5" y="-107" font-family="Helvetica,sans-Serif" font-size="10.00">+ analyze()</text>
<text text-anchor="start" x="172.5" y="-96" font-family="Helvetica,sans-Serif" font-size="10.00">+ ignoreImplicitCast()</text>
<text text-anchor="start" x="172.5" y="-85" font-family="Helvetica,sans-Serif" font-size="10.00">+ equals()</text>
<text text-anchor="start" x="172.5" y="-74" font-family="Helvetica,sans-Serif" font-size="10.00">+ clone()</text>
<text text-anchor="start" x="172.5" y="-63" font-family="Helvetica,sans-Serif" font-size="10.00">+ initBuiltins()</text>
<text text-anchor="start" x="172.5" y="-52" font-family="Helvetica,sans-Serif" font-size="10.00"># CastExpr()</text>
<text text-anchor="start" x="172.5" y="-41" font-family="Helvetica,sans-Serif" font-size="10.00"># treeToThriftHelper()</text>
<text text-anchor="start" x="172.5" y="-30" font-family="Helvetica,sans-Serif" font-size="10.00"># toThrift()</text>
<text text-anchor="start" x="172.5" y="-19" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; analyze()</text>
<text text-anchor="start" x="172.5" y="-8" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; getFnName()</text>
</g>
<!-- Node2 -->
<g id="node2" class="node"><title>Node2</title>
<g id="a_node2"><a xlink:href="classcom_1_1cloudera_1_1impala_1_1analysis_1_1Expr.html" target="_top" xlink:title="{com.cloudera.impala.analysis.Expr\n|+ EXPR_CHILDREN_LIMIT\l+ EXPR_DEPTH_LIMIT\l+ IS_NOT_PREDICATE\l+ IS_OR_PREDICATE\l+ IS_SCALAR_SUBQUERY\l+ NON_NULL_EMPTY_AGG\l+ IS_BUILTIN_AGG_FN\l+ IS_TRUE_LITERAL\l# id_\l# type_\l# isAnalyzed_\l# isWhereClauseConjunct_\l# printSqlInParens_\l# selectivity_\l# numDistinctValues_\l# fn_\l# DEFAULT_SELECTIVITY\l&#45; isAuxExpr_\l&#45; LOG\l&#45; NEGATE_FN\l&#45; isAggregatePredicate_\l|+ getId()\l+ getType()\l+ getSelectivity()\l+ getNumDistinctValues()\l+ setPrintSqlInParens()\l+ isWhereClauseConjunct()\l+ setIsWhereClauseConjunct()\l+ isAuxExpr()\l+ isRegisteredPredicate()\l+ setIsAuxExpr()\land 35 more...\l+ analyze()\l+ getNumDistinctValues()\l+ treesToThrift()\l+ isAggregatePredicate()\l+ debugString()\l+ toSql()\l+ equalLists()\l+ equalSets()\l+ isSubset()\l+ intersect()\land 10 more...\l~ getResolvedWildCardType()\l# Expr()\l# Expr()\l# setId()\l# computeNumDistinctValues()\l# collectChildReturnTypes()\l# getBuiltinFunction()\l# castForFunctionCall()\l# convertNumericLiteralsFrom\lDecimal()\l# toSqlImpl()\l# treeToThriftHelper()\land 6 more...\l&#45; isExplicitCastToDecimal()\l&#45; convertNumericLiteralsTo\lFloat()\l}">
<polygon fill="white" stroke="black" points="154.5,-283 154.5,-967 323.5,-967 323.5,-283 154.5,-283"/>
<text text-anchor="middle" x="239" y="-955" font-family="Helvetica,sans-Serif" font-size="10.00">com.cloudera.impala.analysis.Expr</text>
<polyline fill="none" stroke="black" points="154.5,-948 323.5,-948 "/>
<text text-anchor="start" x="162.5" y="-936" font-family="Helvetica,sans-Serif" font-size="10.00">+ EXPR_CHILDREN_LIMIT</text>
<text text-anchor="start" x="162.5" y="-925" font-family="Helvetica,sans-Serif" font-size="10.00">+ EXPR_DEPTH_LIMIT</text>
<text text-anchor="start" x="162.5" y="-914" font-family="Helvetica,sans-Serif" font-size="10.00">+ IS_NOT_PREDICATE</text>
<text text-anchor="start" x="162.5" y="-903" font-family="Helvetica,sans-Serif" font-size="10.00">+ IS_OR_PREDICATE</text>
<text text-anchor="start" x="162.5" y="-892" font-family="Helvetica,sans-Serif" font-size="10.00">+ IS_SCALAR_SUBQUERY</text>
<text text-anchor="start" x="162.5" y="-881" font-family="Helvetica,sans-Serif" font-size="10.00">+ NON_NULL_EMPTY_AGG</text>
<text text-anchor="start" x="162.5" y="-870" font-family="Helvetica,sans-Serif" font-size="10.00">+ IS_BUILTIN_AGG_FN</text>
<text text-anchor="start" x="162.5" y="-859" font-family="Helvetica,sans-Serif" font-size="10.00">+ IS_TRUE_LITERAL</text>
<text text-anchor="start" x="162.5" y="-848" font-family="Helvetica,sans-Serif" font-size="10.00"># id_</text>
<text text-anchor="start" x="162.5" y="-837" font-family="Helvetica,sans-Serif" font-size="10.00"># type_</text>
<text text-anchor="start" x="162.5" y="-826" font-family="Helvetica,sans-Serif" font-size="10.00"># isAnalyzed_</text>
<text text-anchor="start" x="162.5" y="-815" font-family="Helvetica,sans-Serif" font-size="10.00"># isWhereClauseConjunct_</text>
<text text-anchor="start" x="162.5" y="-804" font-family="Helvetica,sans-Serif" font-size="10.00"># printSqlInParens_</text>
<text text-anchor="start" x="162.5" y="-793" font-family="Helvetica,sans-Serif" font-size="10.00"># selectivity_</text>
<text text-anchor="start" x="162.5" y="-782" font-family="Helvetica,sans-Serif" font-size="10.00"># numDistinctValues_</text>
<text text-anchor="start" x="162.5" y="-771" font-family="Helvetica,sans-Serif" font-size="10.00"># fn_</text>
<text text-anchor="start" x="162.5" y="-760" font-family="Helvetica,sans-Serif" font-size="10.00"># DEFAULT_SELECTIVITY</text>
<text text-anchor="start" x="162.5" y="-749" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; isAuxExpr_</text>
<text text-anchor="start" x="162.5" y="-738" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; LOG</text>
<text text-anchor="start" x="162.5" y="-727" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; NEGATE_FN</text>
<text text-anchor="start" x="162.5" y="-716" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; isAggregatePredicate_</text>
<polyline fill="none" stroke="black" points="154.5,-709 323.5,-709 "/>
<text text-anchor="start" x="162.5" y="-697" font-family="Helvetica,sans-Serif" font-size="10.00">+ getId()</text>
<text text-anchor="start" x="162.5" y="-686" font-family="Helvetica,sans-Serif" font-size="10.00">+ getType()</text>
<text text-anchor="start" x="162.5" y="-675" font-family="Helvetica,sans-Serif" font-size="10.00">+ getSelectivity()</text>
<text text-anchor="start" x="162.5" y="-664" font-family="Helvetica,sans-Serif" font-size="10.00">+ getNumDistinctValues()</text>
<text text-anchor="start" x="162.5" y="-653" font-family="Helvetica,sans-Serif" font-size="10.00">+ setPrintSqlInParens()</text>
<text text-anchor="start" x="162.5" y="-642" font-family="Helvetica,sans-Serif" font-size="10.00">+ isWhereClauseConjunct()</text>
<text text-anchor="start" x="162.5" y="-631" font-family="Helvetica,sans-Serif" font-size="10.00">+ setIsWhereClauseConjunct()</text>
<text text-anchor="start" x="162.5" y="-620" font-family="Helvetica,sans-Serif" font-size="10.00">+ isAuxExpr()</text>
<text text-anchor="start" x="162.5" y="-609" font-family="Helvetica,sans-Serif" font-size="10.00">+ isRegisteredPredicate()</text>
<text text-anchor="start" x="162.5" y="-598" font-family="Helvetica,sans-Serif" font-size="10.00">+ setIsAuxExpr()</text>
<text text-anchor="start" x="162.5" y="-587" font-family="Helvetica,sans-Serif" font-size="10.00">and 35 more...</text>
<text text-anchor="start" x="162.5" y="-576" font-family="Helvetica,sans-Serif" font-size="10.00">+ analyze()</text>
<text text-anchor="start" x="162.5" y="-565" font-family="Helvetica,sans-Serif" font-size="10.00">+ getNumDistinctValues()</text>
<text text-anchor="start" x="162.5" y="-554" font-family="Helvetica,sans-Serif" font-size="10.00">+ treesToThrift()</text>
<text text-anchor="start" x="162.5" y="-543" font-family="Helvetica,sans-Serif" font-size="10.00">+ isAggregatePredicate()</text>
<text text-anchor="start" x="162.5" y="-532" font-family="Helvetica,sans-Serif" font-size="10.00">+ debugString()</text>
<text text-anchor="start" x="162.5" y="-521" font-family="Helvetica,sans-Serif" font-size="10.00">+ toSql()</text>
<text text-anchor="start" x="162.5" y="-510" font-family="Helvetica,sans-Serif" font-size="10.00">+ equalLists()</text>
<text text-anchor="start" x="162.5" y="-499" font-family="Helvetica,sans-Serif" font-size="10.00">+ equalSets()</text>
<text text-anchor="start" x="162.5" y="-488" font-family="Helvetica,sans-Serif" font-size="10.00">+ isSubset()</text>
<text text-anchor="start" x="162.5" y="-477" font-family="Helvetica,sans-Serif" font-size="10.00">+ intersect()</text>
<text text-anchor="start" x="162.5" y="-466" font-family="Helvetica,sans-Serif" font-size="10.00">and 10 more...</text>
<text text-anchor="start" x="162.5" y="-455" font-family="Helvetica,sans-Serif" font-size="10.00">~ getResolvedWildCardType()</text>
<text text-anchor="start" x="162.5" y="-444" font-family="Helvetica,sans-Serif" font-size="10.00"># Expr()</text>
<text text-anchor="start" x="162.5" y="-433" font-family="Helvetica,sans-Serif" font-size="10.00"># Expr()</text>
<text text-anchor="start" x="162.5" y="-422" font-family="Helvetica,sans-Serif" font-size="10.00"># setId()</text>
<text text-anchor="start" x="162.5" y="-411" font-family="Helvetica,sans-Serif" font-size="10.00"># computeNumDistinctValues()</text>
<text text-anchor="start" x="162.5" y="-400" font-family="Helvetica,sans-Serif" font-size="10.00"># collectChildReturnTypes()</text>
<text text-anchor="start" x="162.5" y="-389" font-family="Helvetica,sans-Serif" font-size="10.00"># getBuiltinFunction()</text>
<text text-anchor="start" x="162.5" y="-378" font-family="Helvetica,sans-Serif" font-size="10.00"># castForFunctionCall()</text>
<text text-anchor="start" x="162.5" y="-367" font-family="Helvetica,sans-Serif" font-size="10.00"># convertNumericLiteralsFrom</text>
<text text-anchor="start" x="162.5" y="-356" font-family="Helvetica,sans-Serif" font-size="10.00">Decimal()</text>
<text text-anchor="start" x="162.5" y="-345" font-family="Helvetica,sans-Serif" font-size="10.00"># toSqlImpl()</text>
<text text-anchor="start" x="162.5" y="-334" font-family="Helvetica,sans-Serif" font-size="10.00"># treeToThriftHelper()</text>
<text text-anchor="start" x="162.5" y="-323" font-family="Helvetica,sans-Serif" font-size="10.00">and 6 more...</text>
<text text-anchor="start" x="162.5" y="-312" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; isExplicitCastToDecimal()</text>
<text text-anchor="start" x="162.5" y="-301" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; convertNumericLiteralsTo</text>
<text text-anchor="start" x="162.5" y="-290" font-family="Helvetica,sans-Serif" font-size="10.00">Float()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge"><title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M239,-272.676C239,-263.342 239,-254.235 239,-245.421"/>
<polygon fill="none" stroke="midnightblue" points="235.5,-272.89 239,-282.89 242.5,-272.89 235.5,-272.89"/>
</g>
<!-- Node3 -->
<g id="node3" class="node"><title>Node3</title>
<polygon fill="white" stroke="#bfbfbf" points="-0.5,-1010 -0.5,-1078 146.5,-1078 146.5,-1010 -0.5,-1010"/>
<text text-anchor="start" x="7.5" y="-1066" font-family="Helvetica,sans-Serif" font-size="10.00">com::cloudera::impala</text>
<text text-anchor="middle" x="73" y="-1055" font-family="Helvetica,sans-Serif" font-size="10.00">::common::TreeNode&lt; Expr &gt;</text>
<polyline fill="none" stroke="#bfbfbf" points="-0.5,-1048 146.5,-1048 "/>
<text text-anchor="middle" x="73" y="-1036" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#bfbfbf" points="-0.5,-1029 146.5,-1029 "/>
<text text-anchor="middle" x="73" y="-1017" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge"><title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M89.9364,-1000.45C105.538,-961.263 129.926,-899.999 154.49,-838.292"/>
<polygon fill="none" stroke="midnightblue" points="86.6113,-999.345 86.1645,-1009.93 93.1149,-1001.93 86.6113,-999.345"/>
</g>
<!-- Node4 -->
<g id="node4" class="node"><title>Node4</title>
<g id="a_node4"><a xlink:href="interfacecom_1_1cloudera_1_1impala_1_1analysis_1_1ParseNode.html" target="_top" xlink:title="{com.cloudera.impala.analysis.\lParseNode\n||+ analyze()\l+ toSql()\l}">
<polygon fill="white" stroke="black" points="164.5,-1004.5 164.5,-1083.5 313.5,-1083.5 313.5,-1004.5 164.5,-1004.5"/>
<text text-anchor="start" x="172.5" y="-1071.5" font-family="Helvetica,sans-Serif" font-size="10.00">com.cloudera.impala.analysis.</text>
<text text-anchor="middle" x="239" y="-1060.5" font-family="Helvetica,sans-Serif" font-size="10.00">ParseNode</text>
<polyline fill="none" stroke="black" points="164.5,-1053.5 313.5,-1053.5 "/>
<text text-anchor="middle" x="239" y="-1041.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="164.5,-1034.5 313.5,-1034.5 "/>
<text text-anchor="start" x="172.5" y="-1022.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ analyze()</text>
<text text-anchor="start" x="172.5" y="-1011.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ toSql()</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node2 -->
<g id="edge3" class="edge"><title>Node4&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M239,-993.954C239,-985.842 239,-976.931 239,-967.383"/>
<polygon fill="none" stroke="midnightblue" points="235.5,-994.144 239,-1004.14 242.5,-994.144 235.5,-994.144"/>
</g>
<!-- Node5 -->
<g id="node5" class="node"><title>Node5</title>
<g id="a_node5"><a xlink:href="classCloneable.html" target="_top" xlink:title="{Cloneable\n||}">
<polygon fill="white" stroke="black" points="331,-1015.5 331,-1072.5 391,-1072.5 391,-1015.5 331,-1015.5"/>
<text text-anchor="middle" x="361" y="-1060.5" font-family="Helvetica,sans-Serif" font-size="10.00">Cloneable</text>
<polyline fill="none" stroke="black" points="331,-1053.5 391,-1053.5 "/>
<text text-anchor="middle" x="361" y="-1041.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="331,-1034.5 391,-1034.5 "/>
<text text-anchor="middle" x="361" y="-1022.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node2 -->
<g id="edge4" class="edge"><title>Node5&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M350.086,-1005.7C343.352,-982.677 334.023,-950.791 323.608,-915.194"/>
<polygon fill="none" stroke="midnightblue" points="346.734,-1006.7 352.901,-1015.32 353.452,-1004.74 346.734,-1006.7"/>
</g>
</g>
</svg>
