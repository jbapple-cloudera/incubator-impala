<map id="Cloneable" name="Cloneable">
<area shape="rect" id="node2" href="$classcom_1_1cloudera_1_1impala_1_1analysis_1_1Expr.html" title="{com.cloudera.impala.analysis.Expr\n|+ EXPR_CHILDREN_LIMIT\l+ EXPR_DEPTH_LIMIT\l+ IS_NOT_PREDICATE\l+ IS_OR_PREDICATE\l+ IS_SCALAR_SUBQUERY\l+ NON_NULL_EMPTY_AGG\l+ IS_BUILTIN_AGG_FN\l+ IS_TRUE_LITERAL\l# id_\l# type_\l# isAnalyzed_\l# isWhereClauseConjunct_\l# printSqlInParens_\l# selectivity_\l# numDistinctValues_\l# fn_\l# DEFAULT_SELECTIVITY\l&#45; isAuxExpr_\l&#45; LOG\l&#45; NEGATE_FN\l&#45; isAggregatePredicate_\l|+ getId()\l+ getType()\l+ getSelectivity()\l+ getNumDistinctValues()\l+ setPrintSqlInParens()\l+ isWhereClauseConjunct()\l+ setIsWhereClauseConjunct()\l+ isAuxExpr()\l+ isRegisteredPredicate()\l+ setIsAuxExpr()\land 35 more...\l+ analyze()\l+ getNumDistinctValues()\l+ treesToThrift()\l+ isAggregatePredicate()\l+ debugString()\l+ toSql()\l+ equalLists()\l+ equalSets()\l+ isSubset()\l+ intersect()\land 10 more...\l~ getResolvedWildCardType()\l# Expr()\l# Expr()\l# setId()\l# computeNumDistinctValues()\l# collectChildReturnTypes()\l# getBuiltinFunction()\l# castForFunctionCall()\l# convertNumericLiteralsFrom\lDecimal()\l# toSqlImpl()\l# treeToThriftHelper()\land 6 more...\l&#45; isExplicitCastToDecimal()\l&#45; convertNumericLiteralsTo\lFloat()\l}" alt="" coords="1025,131,1249,1045"/>
<area shape="rect" id="node26" href="$classcom_1_1cloudera_1_1impala_1_1analysis_1_1FunctionParams.html" title="{com.cloudera.impala.analysis.\lFunctionParams\n|&#45; isStar_\l&#45; isDistinct_\l&#45; exprs_\l|+ FunctionParams()\l+ FunctionParams()\l+ isStar()\l+ isDistinct()\l+ exprs()\l+ setIsDistinct()\l+ size()\l+ createStarParam()\l&#45; FunctionParams()\l}" alt="" coords="1274,469,1472,707"/>
<area shape="rect" id="node3" href="$classcom_1_1cloudera_1_1impala_1_1analysis_1_1AnalyticExpr.html" title="{com.cloudera.impala.analysis.\lAnalyticExpr\n|+ FIRST_VALUE_REWRITE\l&#45; fnCall_\l&#45; partitionExprs_\l&#45; orderByElements_\l&#45; window_\l&#45; resetWindow_\l&#45; sqlString_\l&#45; LOG\l&#45; LEAD\l&#45; LAG\l&#45; FIRSTVALUE\l&#45; LASTVALUE\l&#45; RANK\l&#45; DENSERANK\l&#45; ROWNUMBER\l&#45; MIN\l&#45; MAX\l|+ AnalyticExpr()\l+ getFnCall()\l+ getPartitionExprs()\l+ getOrderByElements()\l+ getWindow()\l+ equals()\l+ isConstant()\l+ clone()\l+ toSqlImpl()\l+ debugString()\l+ analyze()\l+ isAnalyticFn()\l+ isAggregateFn()\l~ checkOffset()\l# AnalyticExpr()\l# toThrift()\l# resetAnalysisState()\l# substituteImpl()\l&#45; checkRangeOffsetBoundaryExpr()\l&#45; standardize()\l&#45; getOffsetExpr()\l&#45; syncWithChildren()\l&#45; setChildren()\l&#45; isOffsetFn()\l&#45; isMinMax()\l&#45; isRankingFn()\l}" alt="" coords="5,1093,235,1787"/>
<area shape="rect" id="node4" href="$classcom_1_1cloudera_1_1impala_1_1analysis_1_1ArithmeticExpr.html" title="{com.cloudera.impala.analysis.\lArithmeticExpr\n|&#45; op_\l|+ getOp()\l+ ArithmeticExpr()\l+ debugString()\l+ toSqlImpl()\l+ analyze()\l+ clone()\l+ initBuiltins()\l~ castChild()\l# ArithmeticExpr()\l# toThrift()\l}" alt="" coords="259,1328,457,1552"/>
<area shape="rect" id="node5" href="$classcom_1_1cloudera_1_1impala_1_1analysis_1_1CaseExpr.html" title="{com.cloudera.impala.analysis.\lCaseExpr\n|&#45; decodeExpr_\l&#45; hasCaseExpr_\l&#45; hasElseExpr_\l|+ CaseExpr()\l+ CaseExpr()\l+ equals()\l+ toSqlImpl()\l+ analyze()\l+ clone()\l+ initBuiltins()\l~ toCaseSql()\l# CaseExpr()\l# toThrift()\l&#45; isCase()\l&#45; isDecode()\l}" alt="" coords="482,1299,680,1581"/>
<area shape="rect" id="node6" href="$classcom_1_1cloudera_1_1impala_1_1analysis_1_1CastExpr.html" title="{com.cloudera.impala.analysis.\lCastExpr\n|&#45; targetTypeDef_\l&#45; isImplicit_\l&#45; noOp_\l|+ CastExpr()\l+ CastExpr()\l+ toSqlImpl()\l+ debugString()\l+ isImplicit()\l+ analyze()\l+ ignoreImplicitCast()\l+ equals()\l+ clone()\l+ initBuiltins()\l# CastExpr()\l# treeToThriftHelper()\l# toThrift()\l&#45; analyze()\l&#45; getFnName()\l}" alt="" coords="705,1277,903,1603"/>
<area shape="rect" id="node7" href="$classcom_1_1cloudera_1_1impala_1_1analysis_1_1FunctionCallExpr.html" title="{com.cloudera.impala.analysis.\lFunctionCallExpr\n|&#45; fnName_\l&#45; params_\l&#45; isAnalyticFnCall_\l&#45; isInternalFnCall_\l&#45; isMergeAggFn_\l&#45; label_\l|+ FunctionCallExpr()\l+ FunctionCallExpr()\l+ FunctionCallExpr()\l+ isMergeAggFn()\l+ resetAnalysisState()\l+ equals()\l+ toSqlImpl()\l+ debugString()\l+ getParams()\l+ isScalarFunction()\land 10 more...\l+ createExpr()\l+ createMergeAggCall()\l~ validateScalarFnParams()\l# FunctionCallExpr()\l# toThrift()\l# getFunctionNotFoundError()\l&#45; FunctionCallExpr()\l&#45; resolveDecimalReturnType()\l}" alt="" coords="927,1225,1125,1655"/>
<area shape="rect" id="node9" href="$classcom_1_1cloudera_1_1impala_1_1analysis_1_1LiteralExpr.html" title="{com.cloudera.impala.analysis.\lLiteralExpr\n||+ LiteralExpr()\l+ getStringValue()\l+ swapSign()\l+ compareTo()\l+ create()\l+ fromThrift()\l+ create()\l# LiteralExpr()\l}" alt="" coords="1150,1343,1348,1537"/>
<area shape="rect" id="node14" href="$classcom_1_1cloudera_1_1impala_1_1analysis_1_1Predicate.html" title="{com.cloudera.impala.analysis.\lPredicate\n|# isEqJoinConjunct_\l|+ Predicate()\l+ isEqJoinConjunct()\l+ setIsEqJoinConjunct()\l+ analyze()\l+ isSingleColumnPredicate()\l+ getEqSlots()\l+ getBoundSlot()\l# Predicate()\l}" alt="" coords="1709,1343,1907,1537"/>
<area shape="rect" id="node23" href="$classcom_1_1cloudera_1_1impala_1_1analysis_1_1SlotRef.html" title="{com.cloudera.impala.analysis.\lSlotRef\n|&#45; rawPath_\l&#45; label_\l&#45; desc_\l&#45; LOG\l|+ SlotRef()\l+ SlotRef()\l+ SlotRef()\l+ analyze()\l+ getDesc()\l+ getSlotId()\l+ getResolvedPath()\l+ toSqlImpl()\l+ debugString()\l+ hashCode()\land 6 more...\l# toThrift()\l# uncheckedCastTo()\l&#45; SlotRef()\l}" alt="" coords="1931,1277,2129,1603"/>
<area shape="rect" id="node24" href="$classcom_1_1cloudera_1_1impala_1_1analysis_1_1Subquery.html" title="{com.cloudera.impala.analysis.\lSubquery\n|# stmt_\l# analyzer_\l&#45; LOG\l|+ getAnalyzer()\l+ getStatement()\l+ toSqlImpl()\l+ Subquery()\l+ Subquery()\l+ analyze()\l+ returnsScalarColumn()\l+ clone()\l# toThrift()\l&#45; createStructTypeFromExprList()\l}" alt="" coords="2155,1313,2371,1567"/>
<area shape="rect" id="node25" href="$classcom_1_1cloudera_1_1impala_1_1analysis_1_1TimestampArithmeticExpr.html" title="{com.cloudera.impala.analysis.\lTimestampArithmeticExpr\n|&#45; funcName_\l&#45; op_\l&#45; timeUnitIdent_\l&#45; timeUnit_\l&#45; intervalFirst_\l&#45; TIME_UNITS_MAP\l|+ TimestampArithmeticExpr()\l+ TimestampArithmeticExpr()\l+ analyze()\l+ getTimeUnitIdent()\l+ getTimeUnit()\l+ getOp()\l+ toSqlImpl()\l+ clone()\l~ [static initializer]()\l# TimestampArithmeticExpr()\l# toThrift()\l}" alt="" coords="2395,1284,2593,1596"/>
<area shape="rect" id="node8" href="$classcom_1_1cloudera_1_1impala_1_1analysis_1_1ExtractFromExpr.html" title="{com.cloudera.impala.analysis.\lExtractFromExpr\n|&#45; EXTRACT_FIELDS\l|+ ExtractFromExpr()\l+ analyze()\l+ toSqlImpl()\l+ clone()\l~ [static initializer]()\l# ExtractFromExpr()\l# getFunctionNotFoundError()\l}" alt="" coords="259,1915,457,2095"/>
<area shape="rect" id="node10" href="$classcom_1_1cloudera_1_1impala_1_1analysis_1_1BoolLiteral.html" title="{com.cloudera.impala.analysis.\lBoolLiteral\n|&#45; value_\l|+ BoolLiteral()\l+ BoolLiteral()\l+ debugString()\l+ equals()\l+ getValue()\l+ toSqlImpl()\l+ getStringValue()\l+ compareTo()\l+ clone()\l# BoolLiteral()\l# toThrift()\l# uncheckedCastTo()\l}" alt="" coords="482,1879,680,2132"/>
<area shape="rect" id="node11" href="$classcom_1_1cloudera_1_1impala_1_1analysis_1_1NullLiteral.html" title="{com.cloudera.impala.analysis.\lNullLiteral\n||+ NullLiteral()\l+ equals()\l+ toSqlImpl()\l+ debugString()\l+ getStringValue()\l+ clone()\l+ create()\l# NullLiteral()\l# uncheckedCastTo()\l# toThrift()\l# resetAnalysisState()\l}" alt="" coords="705,1886,903,2125"/>
<area shape="rect" id="node12" href="$classcom_1_1cloudera_1_1impala_1_1analysis_1_1NumericLiteral.html" title="{com.cloudera.impala.analysis.\lNumericLiteral\n|&#45; value_\l&#45; explicitlyCast_\l|+ NumericLiteral()\l+ NumericLiteral()\l+ NumericLiteral()\l+ NumericLiteral()\l+ debugString()\l+ equals()\l+ toSqlImpl()\l+ getStringValue()\l+ getDoubleValue()\l+ getLongValue()\land 6 more...\l# NumericLiteral()\l# toThrift()\l# explicitlyCastToFloat()\l# uncheckedCastTo()\l&#45; init()\l&#45; getUnscaledValue()\l}" alt="" coords="927,1835,1125,2176"/>
<area shape="rect" id="node13" href="$classcom_1_1cloudera_1_1impala_1_1analysis_1_1StringLiteral.html" title="{com.cloudera.impala.analysis.\lStringLiteral\n|&#45; value_\l|+ StringLiteral()\l+ StringLiteral()\l+ equals()\l+ toSqlImpl()\l+ getValue()\l+ getUnescapedValue()\l+ getStringValue()\l+ debugString()\l+ convertToNumber()\l+ compareTo()\l+ clone()\l# StringLiteral()\l# toThrift()\l# uncheckedCastTo()\l}" alt="" coords="1150,1864,1348,2147"/>
<area shape="rect" id="node15" href="$classcom_1_1cloudera_1_1impala_1_1analysis_1_1BetweenPredicate.html" title="{com.cloudera.impala.analysis.\lBetweenPredicate\n|&#45; isNotBetween_\l&#45; rewrittenPredicate_\l&#45; originalChildren_\l|+ BetweenPredicate()\l+ getRewrittenPredicate()\l+ analyze()\l+ getConjuncts()\l+ toSqlImpl()\l+ clone()\l+ reset()\l# BetweenPredicate()\l# toThrift()\l# substituteImpl()\l}" alt="" coords="1373,1879,1571,2132"/>
<area shape="rect" id="node16" href="$classcom_1_1cloudera_1_1impala_1_1analysis_1_1BinaryPredicate.html" title="{com.cloudera.impala.analysis.\lBinaryPredicate\n|&#45; op_\l&#45; LOG\l|+ getOp()\l+ setOp()\l+ BinaryPredicate()\l+ isNullMatchingEq()\l+ toSqlImpl()\l+ debugString()\l+ analyze()\l+ getSlotBinding()\l+ getEqSlots()\l+ getBoundSlot()\l+ negate()\l+ equals()\l+ clone()\l+ initBuiltins()\l+ getEqSlots()\l# BinaryPredicate()\l# toThrift()\l}" alt="" coords="1595,1835,1793,2176"/>
<area shape="rect" id="node17" href="$classcom_1_1cloudera_1_1impala_1_1analysis_1_1CompoundPredicate.html" title="{com.cloudera.impala.analysis.\lCompoundPredicate\n|&#45; op_\l|+ CompoundPredicate()\l+ getOp()\l+ equals()\l+ debugString()\l+ toSqlImpl()\l+ analyze()\l+ getBoundSlots()\l+ negate()\l+ clone()\l+ initBuiltins()\l+ createConjunctivePredicate()\l+ createConjunction()\l# CompoundPredicate()\l# toThrift()\l}" alt="" coords="1819,1864,2021,2147"/>
<area shape="rect" id="node18" href="$classcom_1_1cloudera_1_1impala_1_1analysis_1_1ExistsPredicate.html" title="{com.cloudera.impala.analysis.\lExistsPredicate\n|&#45; notExists_\l&#45; LOG\l|+ isNotExists()\l+ ExistsPredicate()\l+ negate()\l+ ExistsPredicate()\l+ analyze()\l+ clone()\l+ toSqlImpl()\l# toThrift()\l}" alt="" coords="2046,1901,2244,2110"/>
<area shape="rect" id="node19" href="$classcom_1_1cloudera_1_1impala_1_1analysis_1_1InPredicate.html" title="{com.cloudera.impala.analysis.\lInPredicate\n|&#45; isNotIn_\l&#45; IN_SET_LOOKUP\l&#45; NOT_IN_SET_LOOKUP\l&#45; IN_ITERATE\l&#45; NOT_IN_ITERATE\l|+ isNotIn()\l+ InPredicate()\l+ InPredicate()\l+ analyze()\l+ toSqlImpl()\l+ getBoundSlot()\l+ negate()\l+ clone()\l+ initBuiltins()\l# InPredicate()\l# toThrift()\l}" alt="" coords="2269,1857,2467,2154"/>
<area shape="rect" id="node20" href="$classcom_1_1cloudera_1_1impala_1_1analysis_1_1IsNullPredicate.html" title="{com.cloudera.impala.analysis.\lIsNullPredicate\n|&#45; isNotNull_\l&#45; IS_NULL\l&#45; IS_NOT_NULL\l|+ IsNullPredicate()\l+ isNotNull()\l+ equals()\l+ toSqlImpl()\l+ debugString()\l+ analyze()\l+ getBoundSlot()\l+ negate()\l+ clone()\l+ initBuiltins()\l# IsNullPredicate()\l# toThrift()\l}" alt="" coords="2491,1864,2689,2147"/>
<area shape="rect" id="node21" href="$classcom_1_1cloudera_1_1impala_1_1analysis_1_1LikePredicate.html" title="{com.cloudera.impala.analysis.\lLikePredicate\n|&#45; op_\l|+ LikePredicate()\l+ LikePredicate()\l+ equals()\l+ toSqlImpl()\l+ analyze()\l+ clone()\l+ initBuiltins()\l# toThrift()\l}" alt="" coords="2714,1908,2912,2103"/>
<area shape="rect" id="node22" href="$classcom_1_1cloudera_1_1impala_1_1analysis_1_1TupleIsNullPredicate.html" title="{com.cloudera.impala.analysis.\lTupleIsNullPredicate\n|&#45; tupleIds_\l&#45; analyzer_\l|+ TupleIsNullPredicate()\l+ analyze()\l+ equals()\l+ getTupleIds()\l+ isConstant()\l+ clone()\l+ wrapExprs()\l+ wrapExpr()\l# TupleIsNullPredicate()\l# toThrift()\l# toSqlImpl()\l&#45; requiresNullWrapping()\l}" alt="" coords="2937,1871,3135,2139"/>
</map>
