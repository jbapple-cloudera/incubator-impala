<map id="impala::Expr" name="impala::Expr">
<area shape="rect" id="node2" href="$classimpala_1_1CaseExpr.html" title="{impala::CaseExpr\n|&#45; has_case_expr_\l&#45; has_else_expr_\l|+ GetCodegendComputeFn()\l+ GetBooleanVal()\l+ GetTinyIntVal()\l+ GetSmallIntVal()\l+ GetIntVal()\l+ GetBigIntVal()\l+ GetFloatVal()\l+ GetDoubleVal()\l+ GetStringVal()\l+ GetTimestampVal()\l+ GetDecimalVal()\l# CaseExpr()\l# Prepare()\l# Open()\l# Close()\l# DebugString()\l# has_case_expr()\l# has_else_expr()\l&#45; GetChildVal()\l&#45; AnyValEq()\l}" alt="" coords="5,923,195,1293"/>
<area shape="rect" id="node3" href="$classimpala_1_1CoalesceExpr.html" title="{impala::CoalesceExpr\n||+ GetBooleanVal()\l+ GetTinyIntVal()\l+ GetSmallIntVal()\l+ GetIntVal()\l+ GetBigIntVal()\l+ GetFloatVal()\l+ GetDoubleVal()\l+ GetStringVal()\l+ GetTimestampVal()\l+ GetDecimalVal()\l+ DebugString()\l# CoalesceExpr()\l# GetCodegendComputeFn()\l}" alt="" coords="220,981,409,1235"/>
<area shape="rect" id="node4" href="$classimpala_1_1HiveUdfCall.html" title="If the UDF ran into an error, the FE throws an exception. " alt="" coords="434,937,624,1279"/>
<area shape="rect" id="node5" href="$classimpala_1_1IfExpr.html" title="{impala::IfExpr\n||+ GetBooleanVal()\l+ GetTinyIntVal()\l+ GetSmallIntVal()\l+ GetIntVal()\l+ GetBigIntVal()\l+ GetFloatVal()\l+ GetDoubleVal()\l+ GetStringVal()\l+ GetTimestampVal()\l+ GetDecimalVal()\l+ GetCodegendComputeFn()\l+ DebugString()\l# IfExpr()\l}" alt="" coords="649,981,839,1235"/>
<area shape="rect" id="node6" href="$classimpala_1_1IsNullExpr.html" title="{impala::IsNullExpr\n||+ GetBooleanVal()\l+ GetTinyIntVal()\l+ GetSmallIntVal()\l+ GetIntVal()\l+ GetBigIntVal()\l+ GetFloatVal()\l+ GetDoubleVal()\l+ GetStringVal()\l+ GetTimestampVal()\l+ GetDecimalVal()\l+ GetCodegendComputeFn()\l+ DebugString()\l# IsNullExpr()\l}" alt="" coords="863,981,1053,1235"/>
<area shape="rect" id="node7" href="$classimpala_1_1Literal.html" title="{impala::Literal\n|&#45; value_\l|+ Literal()\l+ Literal()\l+ Literal()\l+ Literal()\l+ Literal()\l+ Literal()\l+ Literal()\l+ Literal()\l+ Literal()\l+ GetCodegendComputeFn()\land 9 more...\l+ CreateLiteral()\l# Literal()\l# DebugString()\l}" alt="" coords="1078,974,1268,1242"/>
<area shape="rect" id="node8" href="$classimpala_1_1NullIfExpr.html" title="{impala::NullIfExpr\n||+ GetBooleanVal()\l+ GetTinyIntVal()\l+ GetSmallIntVal()\l+ GetIntVal()\l+ GetBigIntVal()\l+ GetFloatVal()\l+ GetDoubleVal()\l+ GetStringVal()\l+ GetTimestampVal()\l+ GetDecimalVal()\l+ GetCodegendComputeFn()\l+ DebugString()\l# NullIfExpr()\l}" alt="" coords="1293,981,1483,1235"/>
<area shape="rect" id="node9" href="$classimpala_1_1NullLiteral.html" title="{impala::NullLiteral\n||+ NullLiteral()\l+ GetCodegendComputeFn()\l+ GetBooleanVal()\l+ GetTinyIntVal()\l+ GetSmallIntVal()\l+ GetIntVal()\l+ GetBigIntVal()\l+ GetFloatVal()\l+ GetDoubleVal()\l+ GetStringVal()\l+ GetTimestampVal()\l+ GetDecimalVal()\l+ DebugString()\l# NullLiteral()\l}" alt="" coords="1507,974,1697,1242"/>
<area shape="rect" id="node10" href="$classimpala_1_1Predicate.html" title="{impala::Predicate\n||# Predicate()\l}" alt="" coords="1723,1069,1845,1147"/>
<area shape="rect" id="node17" href="$classimpala_1_1ScalarFnCall.html" title="{impala::ScalarFnCall\n|&#45; vararg_start_idx_\l&#45; scalar_fn_wrapper_\l&#45; prepare_fn_\l&#45; close_fn_\l&#45; scalar_fn_\l|+ DebugString()\l# ScalarFnCall()\l# Prepare()\l# Open()\l# GetCodegendComputeFn()\l# Close()\l# IsConstant()\l# GetBooleanVal()\l# GetTinyIntVal()\l# GetSmallIntVal()\l# GetIntVal()\land 6 more...\l&#45; NumFixedArgs()\l&#45; GetUdf()\l&#45; GetFunction()\l&#45; EvaluateChildren()\l&#45; InterpretEval()\l}" alt="" coords="1869,923,2059,1293"/>
<area shape="rect" id="node18" href="$classimpala_1_1SlotRef.html" title="Reference to a single slot of a tuple. " alt="" coords="2083,967,2273,1249"/>
<area shape="rect" id="node11" href="$classimpala_1_1CompoundPredicate.html" title="{impala::CompoundPredicate\n||+ Not()\l# CompoundPredicate()\l# CodegenComputeFn()\l}" alt="" coords="1367,1444,1553,1551"/>
<area shape="rect" id="node14" href="$classimpala_1_1InPredicate.html" title="Predicate for evaluating expressions of the form &quot;val [NOT] IN (x1, x2, x3...)&quot;. " alt="" coords="1578,1341,1779,1653"/>
<area shape="rect" id="node15" href="$classimpala_1_1LikePredicate.html" title="This class handles the Like, Regexp, and Rlike predicates and uses the udf interface. " alt="" coords="1804,1371,1972,1624"/>
<area shape="rect" id="node16" href="$classimpala_1_1TupleIsNullPredicate.html" title="{impala::TupleIsNullPredicate\n|&#45; tuple_ids_\l&#45; tuple_idxs_\l|# TupleIsNullPredicate()\l# Prepare()\l# GetCodegendComputeFn()\l# DebugString()\l# IsConstant()\l# GetBooleanVal()\l}" alt="" coords="1996,1415,2185,1580"/>
<area shape="rect" id="node12" href="$classimpala_1_1AndPredicate.html" title="Expr for evaluating and (&amp;&amp;) operators. " alt="" coords="1258,1702,1448,1823"/>
<area shape="rect" id="node13" href="$classimpala_1_1OrPredicate.html" title="Expr for evaluating or (||) operators. " alt="" coords="1473,1702,1663,1823"/>
</map>
