<map id="com.cloudera.impala.planner.ScanNode" name="com.cloudera.impala.planner.ScanNode">
<area shape="rect" id="node4" href="$classcom_1_1cloudera_1_1impala_1_1planner_1_1DataSourceScanNode.html" title="{com.cloudera.impala.planner.\lDataSourceScanNode\n|&#45; desc_\l&#45; table_\l&#45; acceptedPredicates_\l&#45; acceptedConjuncts_\l&#45; numRowsEstimate_\l&#45; LOG\l|+ DataSourceScanNode()\l+ init()\l+ computeStats()\l+ computeCosts()\l+ literalToColumnValue()\l+ getPerHostMemUpperBound()\l# debugString()\l# toThrift()\l# getNodeExplainString()\l&#45; prepareDataSource()\l&#45; getDisjuncts()\l&#45; getDisjunctsHelper()\l&#45; removeAcceptedConjuncts()\l&#45; computeScanRangeLocations()\l}" alt="" coords="5,1235,216,1591"/>
<area shape="rect" id="node5" href="$classcom_1_1cloudera_1_1impala_1_1planner_1_1HBaseScanNode.html" title="{com.cloudera.impala.planner.\lHBaseScanNode\n|&#45; desc_\l&#45; keyRanges_\l&#45; startKey_\l&#45; stopKey_\l&#45; isEmpty_\l&#45; filters_\l&#45; suggestedCaching_\l&#45; LOG\l&#45; MAX_HBASE_FETCH_BATCH_SIZE\l&#45; DEFAULT_SUGGESTED_CACHING\l&#45; hbaseConf_\l|+ HBaseScanNode()\l+ setKeyRanges()\l+ init()\l+ computeStats()\l+ computeCosts()\l+ printKey()\l+ getPerHostMemUpperBound()\l# debugString()\l# toThrift()\l# getNodeExplainString()\l&#45; setStartStopKey()\l&#45; createHBaseFilters()\l&#45; computeScanRangeLocations()\l&#45; setKeyRangeStart()\l&#45; setKeyRangeEnd()\l&#45; convertToBytes()\l&#45; impalaOpToHBaseOp()\l}" alt="" coords="241,1177,495,1650"/>
<area shape="rect" id="node6" href="$classcom_1_1cloudera_1_1impala_1_1planner_1_1HdfsScanNode.html" title="{com.cloudera.impala.planner.\lHdfsScanNode\n|&#45; tbl_\l&#45; partitions_\l&#45; totalFiles_\l&#45; totalBytes_\l&#45; LOG\l&#45; IO_MGR_BUFFER_SIZE\l&#45; MAX_IO_BUFFERS_PER\l_THREAD\l&#45; THREADS_PER_CORE\l&#45; SCAN_RANGE_SKEW_FACTOR\l&#45; PARTITION_PRUNING_BATCH_SIZE\l|+ HdfsScanNode()\l+ init()\l+ computeStats()\l+ computeCosts()\l+ getPerHostMemUpperBound()\l# debugString()\l# toThrift()\l# getDisplayLabelDetail()\l# getNodeExplainString()\l&#45; computeScanRangeLocations()\l&#45; canEvalUsingPartitionMd()\l&#45; evalBinaryPredicate()\l&#45; evalInPredicate()\l&#45; evalIsNullPredicate()\l&#45; evalSlotBindingFilter()\l&#45; prunePartitions()\l&#45; evalPartitionFiltersInBe()\l}" alt="" coords="519,1177,781,1650"/>
<area shape="rect" id="node2" href="$classcom_1_1cloudera_1_1impala_1_1planner_1_1PlanNode.html" title="{com.cloudera.impala.planner.\lPlanNode\n|# displayName_\l# id_\l# limit_\l# tupleIds_\l# tblRefIds_\l# nullableTupleIds_\l# conjuncts_\l# fragment_\l# outputSmap_\l# assignedConjuncts_\l# cardinality_\l# numNodes_\l# avgRowSize_\l# perHostMemCost_\l# DEFAULT_BATCH_SIZE\l&#45; LOG\l|+ getId()\l+ setId()\l+ getLimit()\l+ hasLimit()\l+ getPerHostMemCost()\l+ getCardinality()\l+ getNumNodes()\l+ getAvgRowSize()\l+ setFragment()\l+ getFragment()\land 19 more...\l+ addCardinalities()\l+ multiplyCardinalities()\l# PlanNode()\l# PlanNode()\l# PlanNode()\l# PlanNode()\l# setDisplayName()\l# getDisplayLabel()\l# getDisplayLabelDetail()\l# getExplainString()\l# getNodeExplainString()\l# getOffsetExplainString()\land 12 more...\l&#45; treeToThriftHelper()\l}" alt="" coords="272,147,464,811"/>
</map>
